version: '3.6'

networks:
  backend:
    external: true
    name: "backend"

volumes:
  mastodon_redis:
    external: false
    name: mastodon_redis

services:
  es:
    restart: unless-stopped
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    container_name: es
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true"
      - "xpack.license.self_generated.type=basic"
      - "xpack.security.enabled=false"
      - "xpack.watcher.enabled=false"
      - "xpack.graph.enabled=false"
      - "xpack.ml.enabled=false"
      - "bootstrap.memory_lock=true"
      - "cluster.name=es-mastodon"
      - "discovery.type=single-node"
      - "thread_pool.write.queue_size=1000"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    networks:
       - backend
    healthcheck:
       test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
    volumes:
       - /mnt/dftba-data/es:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    expose:
      - '9200/tcp'
    hostname: "es"

  web:
    image: mglennon/mastodon:${MY_BRANCH}
    container_name: mastoweb
    restart: unless-stopped
    env_file: .env.production
    command: bundle exec puma -C config/puma.rb
    networks:
      - backend
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    expose:
      - '3000/tcp'
    depends_on:
      - redis
    volumes:
      - /mnt/dftba-data/mastodon/system:/mastodon/public/system
    hostname: "mastoweb"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  streaming:
    image: mglennon/mastodon-streaming:${MY_BRANCH}
    container_name: mastostreaming
    restart: unless-stopped
    env_file: .env.production
    command: node ./streaming/index.js
    networks:
      - backend
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    expose:
      - '4000/tcp'
    depends_on:
      - redis
    hostname: "mastostreaming"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  sidekiq:
    image: mglennon/mastodon:${MY_BRANCH}
    container_name: sidekiq
    restart: unless-stopped
    env_file: .env.production
    command: bundle exec sidekiq
    networks:
      - backend
    volumes:
      - /mnt/dftba-data/mastodon/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
    hostname: "sidekiq"
    depends_on:
      - redis
  redis:
    restart: unless-stopped
    image: redis:7-alpine
    container_name: redis
    hostname: "redis"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - mastodon_redis:/data
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  sidekiq_exporter:
    image: strech/sidekiq-prometheus-exporter
    container_name: mastodon_sidekiq_exporter
    expose:
      - 9292/tcp
    restart: unless-stopped
    hostname: sidekiq-export
    networks:
      - backend
    depends_on:
      - sidekiq
    env_file: .env.production

  es_exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
    container_name: mastodon_es_exporter
    command:
      - '--es.uri=http://es:9200'
    restart: unless-stopped
    expose:
      - "9114/tcp"
    depends_on:
      - es
    networks:
      - backend
    hostname: es-export
    env_file: .env.production